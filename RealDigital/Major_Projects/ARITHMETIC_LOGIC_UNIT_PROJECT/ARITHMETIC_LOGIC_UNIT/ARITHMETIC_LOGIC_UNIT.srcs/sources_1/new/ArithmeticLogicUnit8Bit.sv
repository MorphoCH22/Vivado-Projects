`timescale 1ns / 1ps
/* GOAL: Create a bit-slice 8-bit ALU design with an instruction set of 16, 
 *      including addition/subtraction, bitwise operations, and shifting operations.
 *
 * clk is the clock signal generated by the Blackboard FPGA, which may be divided
 *      in other modules such as the clock divider and SSEG.
 *
 * pushA, pushB, pushEn, and pushRes refer to button inputs which are debounced by a pushbutton
 *      debouncer module.
 * toPush refers to eight switches, each corresponding to a bit in a byte to be pushed
 *      into either register A or register B.
 * 
 * opcode is used to select one of 16 operations to perform on bytes A and B.
 * Cout displays whether or not overflow has occured in the operation.
 *
 * ssegctrl is used to control each of the four SSEG displays on the FPGA.
 * sseg is used to control each of the seven segments for the currently activated
 *      display.
 *
 * Created by: MorphoCH22
 * Board used: RealDigital Blackboard (Xilinx XC7007S ZYNQ)
 */

module ArithmeticLogicUnit8Bit(
        input clk,
        input pushA, pushB, pushEn, pushRes,
        input [3:0] opcode,
        input [7:0] toPush,
        output Cout,
        output [3:0] ssegctrl,
        output [6:0] sseg
    );
    
    wire slowClk;
    wire pushedA, pushedB, pushedEn, pushedRes;
    wire [7:0] A, B, F;
    
    wire [11:0] BCD;
    
    ClockDivider clockDiv (
                         .clkIn(clk),
                         .clkOut(slowClk)
                          );
    
    PushButtonDebouncer pushToA (
                                .clk(clk),
                                .slowClk(slowClk),
                                .push(pushA),
                                .out(pushedA)
                                );
                                
    PushButtonDebouncer pushToB (
                                .clk(clk),
                                .slowClk(slowClk),
                                .push(pushB),
                                .out(pushedB)
                                );
                                
    PushButtonDebouncer pushToEn (
                                .clk(clk),
                                .slowClk(slowClk),
                                .push(pushEn),
                                .out(pushedEn)
                                );
                                
    PushButtonDebouncer pushToRes (
                                .clk(clk),
                                .slowClk(slowClk),
                                .push(pushRes),
                                .out(pushedRes)
                                );
                                
    Register Areg (
                 .D(toPush),
                 .sysClk(clk),
                 .clk(pushedA),
                 .res(pushedRes),
                 .Q(A)
                  );
                  
    Register Breg (
                 .D(toPush),
                 .sysClk(clk),
                 .clk(pushedB),
                 .res(pushedRes),
                 .Q(B)
                  );
                  
    ALU arithLogicUnit (
                      .clk(clk),
                      .En(pushedEn),
                      .res(pushedRes),
                      .Cin(!opcode[3]&!opcode[2]&opcode[1]),
                      .opcode(opcode),
                      .A(A),
                      .B(B),
                      .F(F),
                      .Cout(Cout)
                       );
                       
    bin2bcd converter (
                     .bin(F),
                     .bcd(BCD)
                      );
    
    SevenSeg sevseg (
                     .signCtrl(F[7]),
                     .dataIn(BCD),
                     .clk(clk),
                     .ssegctrl(ssegctrl),
                     .sseg(sseg)
                      );
    
endmodule
